name: CI/CD Pipeline for backend

on:
  push:
    branches:
      - main

permissions:
  id-token: write
  contents: read

jobs:
  backend-build-and-push-to-ECR:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Set up AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: arn:aws:iam::536560382233:role/jinghuan-github-actions-OIDC-role
          role-session-name: OIDCSession
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Log in to Amazon ECR
        run: |
          aws ecr get-login-password --region eu-north-1 | docker login --username AWS --password-stdin ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.eu-north-1.amazonaws.com

      - name: Create ECR repository if it does not exist
        run: |
          aws ecr describe-repositories --repository-names mood-melody-aws --region ${{ secrets.AWS_REGION }} || \
          aws ecr create-repository --repository-name mood-melody-aws --region ${{ secrets.AWS_REGION }}

      # - name: Generate timestamp
      #   id: vars
      #   run: echo "TIMESTAMP=$(date +%Y%m%d%H%M%S)" >> $GITHUB_ENV

      - name: Generate Git commit hash
        id: vars
        run: echo "GIT_COMMIT_HASH=$(git rev-parse --short HEAD)" >> $GITHUB_ENV

      - name: List files in backend directory
        run: ls -la ./backend

      # - name: Build and push backend Docker image
      #   env:
      #     TIMESTAMP: ${{ env.TIMESTAMP }}
      #     REPO_URI: ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/mood-melody-aws
      #   run: |
      #     docker build -t mood-melody-aws:backend-${TIMESTAMP} -t mood-melody-aws:backend-latest ./backend
      #     docker tag mood-melody-aws:backend-${TIMESTAMP} ${REPO_URI}:backend-${TIMESTAMP}
      #     docker tag mood-melody-aws:backend-latest ${REPO_URI}:backend-latest
      #     docker push ${REPO_URI}:backend-${TIMESTAMP}
      #     docker push ${REPO_URI}:backend-latest

      - name: Build and push backend Docker image
        env:
          GIT_COMMIT_HASH: ${{ env.GIT_COMMIT_HASH }}
          REPO_URI: ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/mood-melody-aws
        run: |
          docker build -t mood-melody-aws:backend-${GIT_COMMIT_HASH} -t mood-melody-aws:backend-latest ./backend
          docker tag mood-melody-aws:backend-${GIT_COMMIT_HASH} ${REPO_URI}:backend-${GIT_COMMIT_HASH}
          docker tag mood-melody-aws:backend-latest ${REPO_URI}:backend-latest
          docker push ${REPO_URI}:backend-${GIT_COMMIT_HASH}
          docker push ${REPO_URI}:backend-latest

      # - name: Verify backend image exists
      #   env:
      #     TIMESTAMP: ${{ env.TIMESTAMP }}
      #   run: |
      #     aws ecr describe-images --repository-name mood-melody-aws --image-ids imageTag=backend-${TIMESTAMP}

      - name: Verify backend image exists
        env:
          GIT_COMMIT_HASH: ${{ env.GIT_COMMIT_HASH }}
        run: |
          aws ecr describe-images --repository-name mood-melody-aws --image-ids imageTag=backend-${GIT_COMMIT_HASH}

      # - name: Trigger CodePipeline
      #   if: ${{ success() }}
      #   run: |
      #     aws codepipeline start-pipeline-execution --name mood-melody --region ${{ secrets.AWS_REGION }}

      - name: Trigger CodePipeline
        if: ${{ success() }}
        run: |
          aws codepipeline start-pipeline-execution --name mood-melody --region ${{ secrets.AWS_REGION }} --parameter-overrides GitCommitHash=${{ env.GIT_COMMIT_HASH }}
