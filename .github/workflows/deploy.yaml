# name: Deploy Full-Stack App to Heroku

# on:
#   push:
#     branches:
#       - main # Adjust this as needed

# jobs:
#   # Failed Workflow Example to test CI/CD pipeline's error notification systems
#   # fail-job:
#   #   runs-on: ubuntu-latest
#   #   steps:
#   #     - name: Checkout repository
#   #       uses: actions/checkout@v2

#   #     - name: Fail step
#   #       run: exit 1

#   deploy-frontend:
#     runs-on: ubuntu-latest
#     steps:
#       - uses: actions/checkout@v2
#       - name: Login to Heroku Container Registry
#         run: heroku container:login
#         env:
#           HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
#       - name: Build and push frontend Docker image
#         run: |
#           heroku container:push web -a ${{ secrets.HEROKU_APP_NAME_FRONTEND }}
#           heroku container:release web -a ${{ secrets.HEROKU_APP_NAME_FRONTEND }}

#   deploy-backend:
#     runs-on: ubuntu-latest
#     steps:
#       - uses: actions/checkout@v2
#       - name: Login to Heroku Container Registry
#         run: heroku container:login
#         env:
#           HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
#       - name: Build and push backend Docker image
#         run: |
#           heroku container:push web -a ${{ secrets.HEROKU_APP_NAME_BACKEND }}
#           heroku container:release web -a ${{ secrets.HEROKU_APP_NAME_BACKEND }}

name: Deploy Full-Stack App to Heroku

on:
  push:
    branches:
      - main

jobs:
  deploy-backend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Login to Heroku Container Registry
        run: heroku container:login
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}

      - name: Build and push backend (Flask) Docker image
        run: |
          docker build -t registry.heroku.com/${{ secrets.HEROKU_APP_NAME_BACKEND }}/web ./backend
          docker push registry.heroku.com/${{ secrets.HEROKU_APP_NAME_BACKEND }}/web
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}

      - name: Release backend Docker image to Heroku app
        run: heroku container:release web -a ${{ secrets.HEROKU_APP_NAME_BACKEND }}
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}

  deploy-frontend:
    needs: deploy-backend
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Login to Heroku Container Registry
        run: heroku container:login
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}

      - name: Build and push frontend (Next.js) Docker image
        run: |
          docker build -t registry.heroku.com/${{ secrets.HEROKU_APP_NAME_FRONTEND }}/web ./frontend
          docker push registry.heroku.com/${{ secrets.HEROKU_APP_NAME_FRONTEND }}/web
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}

      # New step: Retrieve backend URL and set it for the frontend app
      - name: Set Backend URL in Frontend App's Config Vars
        run: |
          BACKEND_URL=$(heroku apps:info -s -a ${{ secrets.HEROKU_APP_NAME_BACKEND }} | grep web_url | cut -d= -f2 | tr -d '[:space:]')
          heroku config:set NEXT_PUBLIC_API_URL=$BACKEND_URL -a ${{ secrets.HEROKU_APP_NAME_FRONTEND }}
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}

      - name: Release frontend Docker image to Heroku app
        run: heroku container:release web -a ${{ secrets.HEROKU_APP_NAME_FRONTEND }}
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
