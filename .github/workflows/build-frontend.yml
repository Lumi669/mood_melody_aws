name: Build and Push Frontend

on:
  repository_dispatch:
    types: [build-frontend]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up environment variables
        env:
          BACKEND_API_URL: ${{ github.event.client_payload.BACKEND_API_URL }}
        run: |
          echo "BACKEND_API_URL=${BACKEND_API_URL}" >> $GITHUB_ENV
          echo "BACKEND_API_URL ===== , ${BACKEND_API_URL}"

      - name: Generate timestamp
        id: vars
        # run: echo "::set-output name=timestamp::$(date +%Y%m%d%H%M%S)"
        run: echo "TIMESTAMP=$(date +%Y%m%d%H%M%S)" >> $GITHUB_ENV

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-north-1

      - name: Log in to Amazon ECR
        run: |
          aws ecr get-login-password --region eu-north-1 | docker login --username AWS --password-stdin ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.eu-north-1.amazonaws.com

      - name: Build and push frontend Docker image
        env:
          TIMESTAMP: ${{ env.TIMESTAMP }}
          REPO_URI: ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.eu-north-1.amazonaws.com/mood-melody-aws
          BACKEND_API_URL: ${{ env.BACKEND_API_URL }}

        run: |

          echo "BACKEND_API_UR from build and push fronten image step ========= ${BACKEND_API_URL}"
          docker build \
            --build-arg NEXT_PUBLIC_API_URL_0=${BACKEND_API_URL}/api/images \
            --build-arg NEXT_PUBLIC_API_URL_1=${BACKEND_API_URL}/api/musics \
            -t mood-melody-aws:frontend-${TIMESTAMP} \
            -t mood-melody-aws:frontend-latest \
            ./frontend

          docker tag mood-melody-aws:frontend-${TIMESTAMP} ${REPO_URI}:frontend-${TIMESTAMP}
          docker tag mood-melody-aws:frontend-latest ${REPO_URI}:frontend-latest
          docker push ${REPO_URI}:frontend-${TIMESTAMP}
          docker push ${REPO_URI}:frontend-latest

      - name: Verify frontend image exists
        env:
          TIMESTAMP: ${{ env.TIMESTAMP }}
        run: |
          aws ecr describe-images --repository-name mood-melody-aws --image-ids imageTag=frontend-${TIMESTAMP}

      - name: Trigger Lambda Function on Success
        if: success()
        env:
          AWS_REGION: ${{ secrets.AWS_REGION }}
          GITHUB_RUN_ID: ${{ github.run_id }}
          TOKEN_GITHUB: ${{ vars.TOKEN_GITHUB }}
        run: |
          curl -X POST "https://lambda.${{secrets.AWS_REGION}}.amazonaws.com/2015-03-31/functions/deployFrontendStageTrigger/invocations" \
          -H "Content-Type: application/json" \
          -d "{\"owner\": \"Lumi669\", \"repo\": \"mood_melody_aws\", \"workflow_id\": \"build-frontend\", \"run_id\": \"${GITHUB_RUN_ID}\", \"token\": \"${TOKEN_GITHUB}\"}"
